syntax = "proto3";
package dvc.protocol;

message JoinConferenceRequest {
	string user_id = 1;
	string name = 2;
	string conference_id = 3;
}

message JoinConferenceResponse {
	int32 result = 1;
	string user_id = 2;
	string conference_id = 3;
}

message Participant {
	enum State {
		Joined = 0;
		Left = 1;
	}

	string user_id = 1;
	string name = 2;
	State state = 3;
}

message RosterMessage {
	string conference_id = 1;
	repeated Participant participants = 2;
}

message LeaveConferenceRequest {
	string user_id = 1;
	string conference_id = 2;
}

message LeaveConferenceResponse {
	int32 result = 1;
	string user_id = 2;
	string conference_id = 3;
}

message EndConferenceRequest {
	string user_id = 1;
	string conference_id = 2;
}

message EndConferenceResponse {
	int32 result = 1;
	string user_id = 2;
	string conference_id = 3;
}

message EndConferenceIndication {
	string conference_id = 1;
}

message ChatMessage {
	string from_user_id = 1;
	string to_user_id = 2;
	string conference_id = 3;
	string content = 4;
}

message ChatMessageAck {
}

message DVCMessage {
	enum DVCMessageType {
		JoinConferenceRequest = 0;
		JoinConferenceResponse = 1;
		LeaveConferenceRequest = 2;
		LeaveConferenceResponse = 3;
		EndConferenceRequest = 4;
		EndConferenceResponse = 5;
		EndConferenceIndication = 6;
		Chat = 7;
		ChatAck = 8;
		RosterMessage = 9;
	}

	DVCMessageType type = 1;
	JoinConferenceRequest join_conf_req = 2;
	JoinConferenceResponse join_conf_rsp = 3;
	LeaveConferenceRequest leave_conf_req = 4;
	LeaveConferenceResponse leave_conf_rsp = 5;
	EndConferenceRequest end_conf_req = 6;
	EndConferenceResponse end_conf_rsp = 7;
	EndConferenceIndication end_conf_ind = 8;
	ChatMessage chat_msg = 9;
	ChatMessageAck chat_msg_ack = 10;
	RosterMessage roster_msg = 11;
}
